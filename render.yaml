services:
  # Serviço do Redis
  - type: redis
    name: crowdelic-redis
    plan: free
    maxmemoryPolicy: noeviction
    ipAllowList: []

  # Serviço do Backend
  - type: web
    name: crowdelic-api
    env: node
    plan: starter
    buildCommand: cd backend && npm install && npm i --save-dev @types/redis @types/pg @types/express @types/bcryptjs @types/jsonwebtoken @types/response-time && npm run build
    startCommand: cd backend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        sync: false # Será configurado manualmente no Render
      - key: JWT_SECRET
        sync: false # Será configurado manualmente no Render
      - key: OPENAI_API_KEY
        sync: false # Será configurado manualmente no Render
      - key: REDIS_URL
        fromService:
          type: redis
          name: crowdelic-redis
          property: connectionString

  # Serviço do Frontend
  - type: web
    name: crowdelic-web
    env: static
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_API_URL
        value: https://crowdelic-api.onrender.com
      - key: VITE_SOCKET_URL
        value: https://crowdelic-api.onrender.com
      - key: VITE_ENVIRONMENT
        value: production

databases:
  - name: crowdelic-db
    plan: basic-256mb
    ipAllowList: [] # Permitir todas as conexões
